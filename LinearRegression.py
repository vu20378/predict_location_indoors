{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EIrkPnuf2UPt","executionInfo":{"status":"ok","timestamp":1716875423621,"user_tz":-420,"elapsed":27094,"user":{"displayName":"K16 NCKH","userId":"11588807329835209005"}},"outputId":"ea147738-83c4-4b0f-dea4-e338229bc963"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","Đang đọc dữ liệu /content/drive/MyDrive/NCKH_K16/Vu_3tang_fn.csv\n","Đang chia dữ liệu thành các tập kiểm tra và huấn luyện\n","Đang chuẩn hóa dữ liệu\n","Đang huấn luyện mô hình\n","Epoch 0, Loss: 213.7006, Weights: [0.06421522 0.04891088 0.05430105 ... 0.00024423 0.0001791  0.00013026], Bias: [0.15389886 0.1087179  0.13157425]\n","Epoch 10, Loss: 158.0453, Weights: [0.63385531 0.48649937 0.53630063 ... 0.00257379 0.00189318 0.00133822], Bias: [1.54289588 1.08972972 1.32068658]\n","Epoch 20, Loss: 120.5617, Weights: [1.08895733 0.84266073 0.92193891 ... 0.00472289 0.00348466 0.00239491], Bias: [2.69434882 1.90259714 2.30919189]\n","Epoch 30, Loss: 95.2293, Weights: [1.45069911 1.13238492 1.22904611 ... 0.00672168 0.00497477 0.00332577], Bias: [3.65132182 2.57779504 3.1333743 ]\n","Epoch 40, Loss: 78.0262, Weights: [1.73638063 1.36791777 1.47218674 ... 0.00859483 0.00638088 0.00415166], Bias: [4.4490162  3.14023434 3.82289545]\n","Epoch 50, Loss: 66.2653, Weights: [1.960133   1.55926277 1.66325673 ... 0.0103626  0.00771723 0.0048897 ], Bias: [5.11620757 3.61027899 4.40200485]\n","Epoch 60, Loss: 58.1511, Weights: [2.13349802 1.71459109 1.81197148 ... 0.01204159 0.00899549 0.00555395], Bias: [5.67642029 4.004577   4.89052897]\n","Epoch 70, Loss: 52.4835, Weights: [2.2659017  1.84057665 1.92626466 ... 0.01364545 0.01022521 0.00615595], Bias: [6.14888715 4.33673955 5.30467953]\n","Epoch 80, Loss: 48.4604, Weights: [2.36504115 1.94267    2.0126141  ... 0.01518539 0.01141425 0.00670519], Bias: [6.54933367 4.61789596 5.65771403]\n","Epoch 90, Loss: 45.5453, Weights: [2.43720087 2.02532199 2.07630807 ... 0.01667062 0.01256904 0.0072095 ], Bias: [6.89061898 4.85714722 5.96047554]\n","Epoch 100, Loss: 43.3794, Weights: [2.48751112 2.09216669 2.12166293 ... 0.01810873 0.01369487 0.00767532], Bias: [7.18325964 5.06193662 6.22183382]\n","Epoch 110, Loss: 41.7225, Weights: [2.52015907 2.14617081 2.15220095 ... 0.01950599 0.01479609 0.00810798], Bias: [7.43585761 5.23835261 6.44904579]\n","Epoch 120, Loss: 40.4136, Weights: [2.53856137 2.18975573 2.17079562 ... 0.02086757 0.01587628 0.00851188], Bias: [7.65545003 5.39137632 6.64805016]\n","Epoch 130, Loss: 39.3447, Weights: [2.54550513 2.22489738 2.17979041 ... 0.02219775 0.01693839 0.00889067], Bias: [7.84779508 5.52508383 6.82370812]\n","Epoch 140, Loss: 38.4433, Weights: [2.54326319 2.25320768 2.18109579 ... 0.02350008 0.01798486 0.00924739], Bias: [8.01760554 5.64281144 6.98000013]\n","Epoch 150, Loss: 37.6606, Weights: [2.53368819 2.27600124 2.17626852 ... 0.02477751 0.0190177  0.00958457], Bias: [8.16873973 5.7472908  7.12018665]\n","Epoch 160, Loss: 36.9636, Weights: [2.51828961 2.29434975 2.16657648 ... 0.02603251 0.02003857 0.00990431], Bias: [8.30435749 5.84075925 7.24693962]\n","Epoch 170, Loss: 36.3300, Weights: [2.49829656 2.3091265  2.15305155 ... 0.02726714 0.02104886 0.0102084 ], Bias: [8.42704765 5.92505007 7.36244973]\n","Epoch 180, Loss: 35.7445, Weights: [2.47470919 2.32104272 2.13653294 ... 0.02848312 0.02204973 0.01049833], Bias: [8.53893228 6.00166619 7.46851429]\n","Epoch 190, Loss: 35.1968, Weights: [2.44834066 2.33067728 2.11770246 ... 0.02968191 0.02304213 0.01077535], Bias: [8.64175176 6.07184047 7.56660885]\n","MSE: 34.97, MAE: 4.50, R-squared: -5.31\n","Đang đọc dữ liệu /content/drive/MyDrive/NCKH_K16/Long_3tang_fn.csv\n","Đang chia dữ liệu thành các tập kiểm tra và huấn luyện\n","Đang chuẩn hóa dữ liệu\n","Đang huấn luyện mô hình\n","Epoch 0, Loss: 214.7859, Weights: [7.44847474e-03 7.15133730e-03 1.42303427e-02 ... 4.64684015e-05\n"," 3.40768278e-05 2.47831475e-05], Bias: [0.15349619 0.10983891 0.13166224]\n","Epoch 10, Loss: 156.3389, Weights: [0.06549092 0.06681202 0.1418239  ... 0.00048814 0.00035865 0.00025281], Bias: [1.53079094 1.09526153 1.31176589]\n","Epoch 20, Loss: 117.7147, Weights: [0.09779282 0.10789835 0.24627479 ... 0.00089345 0.00065772 0.00044958], Bias: [2.66012788 1.90301164 2.2771555 ]\n","Epoch 30, Loss: 92.1007, Weights: [0.10940428 0.13402806 0.33196355 ... 0.0012691  0.00093604 0.0006209 ], Bias: [3.58857538 2.56679647 3.06856762]\n","Epoch 40, Loss: 75.0291, Weights: [0.10441281 0.14812952 0.40243765 ... 0.00162049 0.00119749 0.00077144], Bias: [4.35424826 3.11391184 3.71899066]\n","Epoch 50, Loss: 63.5688, Weights: [0.08612646 0.15257299 0.46056989 ... 0.00195201 0.00144519 0.00090503], Bias: [4.98801109 3.56646181 4.25513882]\n","Epoch 60, Loss: 55.7973, Weights: [0.05722213 0.14927673 0.5086868  ... 0.00226721 0.00168169 0.00102474], Bias: [5.51485749 3.94234638 4.69864567]\n","Epoch 70, Loss: 50.4532, Weights: [0.01986568 0.13979304 0.54867256 ... 0.00256897 0.00190902 0.00113307], Bias: [5.95502698 4.25606122 5.06703065]\n","Epoch 80, Loss: 46.7087, Weights: [-0.02419086  0.12537788  0.58205311 ...  0.00285962  0.00212885\n","  0.00123204], Bias: [6.32490941 4.51934533 5.37448173]\n","Epoch 90, Loss: 44.0206, Weights: [-0.0735305   0.10704726  0.61006434 ...  0.00314104  0.00234252\n","  0.0013233 ], Bias: [6.63777731 4.74170539 5.63248913]\n","Epoch 100, Loss: 42.0322, Weights: [-0.12700756  0.08562291  0.63370726 ...  0.00341478  0.00255112\n","  0.00140818], Bias: [6.90437888 4.93084049 5.85035855]\n","Epoch 110, Loss: 40.5092, Weights: [-0.18369603  0.06176924  0.65379267 ...  0.00368207  0.00275554\n","  0.00148777], Bias: [7.1334183  5.09298595 6.0356267 ]\n","Epoch 120, Loss: 39.2977, Weights: [-0.24284775  0.03602327  0.67097736 ...  0.00394392  0.00295647\n","  0.00156294], Bias: [7.33194448 5.2331918  6.19439782]\n","Epoch 130, Loss: 38.2965, Weights: [-0.30385854  0.00881893  0.68579338 ...  0.00420116  0.00315451\n","  0.00163441], Bias: [7.50566603 5.35554823 6.33161619]\n","Epoch 140, Loss: 37.4388, Weights: [-0.36624083 -0.01949338  0.69867182 ...  0.00445443  0.0033501\n","  0.00170275], Bias: [7.6592062  5.46336821 6.45128673]\n","Epoch 150, Loss: 36.6808, Weights: [-0.42960141 -0.04863086  0.70996196 ...  0.00470428  0.00354365\n","  0.00176844], Bias: [7.79630936 5.5593353  6.55665374]\n","Epoch 160, Loss: 35.9933, Weights: [-0.49362348 -0.07836543  0.71994685 ...  0.00495116  0.00373544\n","  0.00183187], Bias: [7.92000818 5.64562343 6.65034555]\n","Epoch 170, Loss: 35.3571, Weights: [-0.55805209 -0.10851331  0.72885594 ...  0.0051954   0.00392572\n","  0.00189334], Bias: [8.03275908 5.7239938  6.73449167]\n","Epoch 180, Loss: 34.7594, Weights: [-0.62268236 -0.13892661  0.73687523 ...  0.00543732  0.0041147\n","  0.00195312], Bias: [8.13655176 5.79587338 6.8108177 ]\n","Epoch 190, Loss: 34.1917, Weights: [-0.68734992 -0.16948644  0.74415556 ...  0.00567713  0.00430253\n","  0.00201141], Bias: [8.23299808 5.86241854 6.88072213]\n","MSE: 1036.07, MAE: 5.09, R-squared: -228.62\n","Đang đọc dữ liệu /content/drive/MyDrive/NCKH_K16/Tu_3tang_fn.csv\n","Đang chia dữ liệu thành các tập kiểm tra và huấn luyện\n","Đang chuẩn hóa dữ liệu\n","Đang huấn luyện mô hình\n","Epoch 0, Loss: 215.0108, Weights: [0.00743208 0.00721056 0.01391995 ... 0.         0.         0.        ], Bias: [0.1539653 0.1093839 0.1316548]\n","Epoch 10, Loss: 157.6542, Weights: [0.06567244 0.06777775 0.13880448 ... 0.         0.         0.        ], Bias: [1.53892513 1.09291251 1.31480998]\n","Epoch 20, Loss: 119.4615, Weights: [0.09868202 0.11022248 0.24112172 ... 0.         0.         0.        ], Bias: [2.67996759 1.90249259 2.28762679]\n","Epoch 30, Loss: 93.9373, Weights: [0.11134331 0.13802623 0.32508975 ... 0.         0.         0.        ], Bias: [3.62262133 2.57057455 3.089357  ]\n","Epoch 40, Loss: 76.7910, Weights: [0.10762175 0.15401681 0.39413598 ... 0.         0.         0.        ], Bias: [4.40388657 3.12353076 3.75190044]\n","Epoch 50, Loss: 65.1884, Weights: [0.09073755 0.16049092 0.45104539 ... 0.         0.         0.        ], Bias: [5.05383307 3.58279437 4.30118254]\n","Epoch 60, Loss: 57.2568, Weights: [0.0633054  0.15931366 0.49808086 ... 0.         0.         0.        ], Bias: [5.59689865 3.96578476 4.7582737 ]\n","Epoch 70, Loss: 51.7589, Weights: [0.02744797 0.15199945 0.53708105 ... 0.         0.         0.        ], Bias: [6.05294446 4.28665958 5.14029896]\n","Epoch 80, Loss: 47.8770, Weights: [-0.0151119   0.13977773  0.56953989 ...  0.          0.\n","  0.        ], Bias: [6.43811248 4.55692585 5.46117718]\n","Epoch 90, Loss: 45.0706, Weights: [-0.06297619  0.12364639  0.59667121 ...  0.          0.\n","  0.        ], Bias: [6.76552234 4.7859366  5.73222174]\n","Epoch 100, Loss: 42.9823, Weights: [-0.11501084  0.10441518  0.61946123 ...  0.          0.\n","  0.        ], Bias: [7.04583761 4.98129444 5.9626287 ]\n","Epoch 110, Loss: 41.3755, Weights: [-0.17029623  0.08274098  0.63871121 ...  0.          0.\n","  0.        ], Bias: [7.28772598 5.1491795  6.15987349]\n","Epoch 120, Loss: 40.0937, Weights: [-0.22808698  0.05915647  0.65507214 ...  0.          0.\n","  0.        ], Bias: [7.49823315 5.29461591 6.33003321]\n","Epoch 130, Loss: 39.0332, Weights: [-0.28777927  0.0340934   0.6690729  ...  0.          0.\n","  0.        ], Bias: [7.68308675 5.42168841 6.47804863]\n","Epoch 140, Loss: 38.1252, Weights: [-0.34888425  0.00790157  0.68114317 ...  0.          0.\n","  0.        ], Bias: [7.84694327 5.5337183  6.60793706]\n","Epoch 150, Loss: 37.3241, Weights: [-0.4110065  -0.01913587  0.69163201 ...  0.          0.\n","  0.        ], Bias: [7.99358874 5.63340646 6.72296532]\n","Epoch 160, Loss: 36.5993, Weights: [-0.47382648 -0.04678986  0.70082299 ...  0.          0.\n","  0.        ], Bias: [8.12610175 5.72294956 6.82579031]\n","Epoch 170, Loss: 35.9306, Weights: [-0.53708629 -0.07487527  0.70894647 ...  0.          0.\n","  0.        ], Bias: [8.24698603 5.80413454 6.91857327]\n","Epoch 180, Loss: 35.3042, Weights: [-0.60057805 -0.10324271  0.71618958 ...  0.          0.\n","  0.        ], Bias: [8.35827811 5.87841531 7.00307258]\n","Epoch 190, Loss: 34.7111, Weights: [-0.66413454 -0.13177174  0.72270434 ...  0.          0.\n","  0.        ], Bias: [8.46163481 5.94697512 7.08071924]\n","MSE: 32.80, MAE: 4.32, R-squared: -3.99\n"]}],"source":["import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n","from sklearn.preprocessing import MinMaxScaler\n","from google.colab import drive\n","\n","class MyLinearRegression:\n","    def __init__(self, learning_rate=0.001, epochs=100, regularization=None):\n","        self.learning_rate = learning_rate\n","        self.epochs = epochs\n","        self.regularization = regularization\n","        self.weights = None\n","        self.bias = None\n","\n","    def fit(self, X, y):\n","        n_samples, n_features = X.shape\n","        if y.ndim == 1:\n","            y = y.reshape(-1, 1)\n","        n_outputs = y.shape[1]\n","\n","        self.weights = np.zeros((n_features, n_outputs))\n","        self.bias = np.zeros(n_outputs)\n","\n","        for epoch in range(self.epochs):\n","            y_predicted = np.dot(X, self.weights) + self.bias\n","            errors = y_predicted - y\n","            dw = (1 / n_samples) * np.dot(X.T, errors)\n","            db = (1 / n_samples) * np.sum(errors, axis=0)\n","\n","            if self.regularization:\n","                dw += self.regularization * self.weights\n","\n","            self.weights -= self.learning_rate * dw\n","            self.bias -= self.learning_rate * db\n","\n","            if epoch % 10 == 0:  # Print debug information every 10 epochs\n","                loss = mean_squared_error(y, y_predicted)\n","                print(f\"Epoch {epoch}, Loss: {loss:.4f}, Weights: {self.weights.flatten()}, Bias: {self.bias}\")\n","\n","    def predict(self, X):\n","        return np.dot(X, self.weights) + self.bias\n","\n","    def evaluate(self, X, y):\n","        if y.ndim == 1:\n","            y = y.reshape(-1, 1)\n","        y_pred = self.predict(X)\n","        mse = mean_squared_error(y, y_pred)\n","        mae = mean_absolute_error(y, y_pred)\n","        r2 = r2_score(y, y_pred)\n","        return mse, mae, r2\n","\n","# Mount Google Drive\n","drive.mount('/content/drive', force_remount=True)\n","\n","# File paths\n","file11 = [\n","    '/content/drive/MyDrive/NCKH_K16/Vu_3tang_fn.csv',\n","    '/content/drive/MyDrive/NCKH_K16/Long_3tang_fn.csv',\n","    '/content/drive/MyDrive/NCKH_K16/Tu_3tang_fn.csv'\n","]\n","\n","results_list = []\n","\n","for i in file11:\n","    print(f\"Đang đọc dữ liệu {i}\")\n","    data = pd.read_csv(i, low_memory=False)\n","\n","    print(\"Đang chia dữ liệu thành các tập kiểm tra và huấn luyện\")\n","    X = data.iloc[:, :-3].values  # Lấy tất cả các cột trừ 3 cột cuối\n","    y = data.iloc[:, -3:].values  # Lấy 3 cột cuối (nếu chỉ có 1 cột, vẫn hoạt động)\n","\n","    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","    print(\"Đang chuẩn hóa dữ liệu\")\n","    scaler = MinMaxScaler()\n","    X_train = scaler.fit_transform(X_train)\n","    X_test = scaler.transform(X_test)\n","\n","    print(\"Đang huấn luyện mô hình\")\n","    lr_model = MyLinearRegression(learning_rate=0.01, epochs=200, regularization=0.01)  # Adjusted learning rate, epochs, and added regularization\n","    lr_model.fit(X_train, y_train)\n","\n","    mse, mae, r2 = lr_model.evaluate(X_test, y_test)\n","    print(f\"MSE: {mse:.2f}, MAE: {mae:.2f}, R-squared: {r2:.2f}\")\n","\n","    result = {'File': i, 'MSE': mse, 'MAE': mae, 'R-squared': r2}\n","    results_list.append(result)\n","\n","# Save results to CSV\n","results_df = pd.DataFrame(results_list)\n","results_df.to_csv('/content/drive/MyDrive/NCKH_K16/results_lr_3T.csv', index=False)\n"]}]}